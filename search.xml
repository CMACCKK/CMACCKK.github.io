<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>dirscan</title>
      <link href="2020/12/15/dirscan/"/>
      <url>2020/12/15/dirscan/</url>
      
        <content type="html"><![CDATA[<h1 id="目录扫描器（暴力扫描）"><a href="#目录扫描器（暴力扫描）" class="headerlink" title="目录扫描器（暴力扫描）"></a>目录扫描器（暴力扫描）</h1><h2 id="首先确定我们要扫描的目标，得到一个url"><a href="#首先确定我们要扫描的目标，得到一个url" class="headerlink" title="首先确定我们要扫描的目标，得到一个url"></a>首先确定我们要扫描的目标，得到一个url</h2><p>使用request模块，所以url的格式需要为<a href="http://xxx.xxx.xxx的类型/">http://xxx.xxx.xxx的类型</a></p><p>我们就需要对url格式进行判断和更改</p><pre class=" language-python"><code class="language-python"><span class="token keyword">if</span> url<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'http://'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        _url <span class="token operator">=</span> url    <span class="token keyword">elif</span> url<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'https://'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        tmp_url <span class="token operator">=</span> url<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'https://'</span><span class="token punctuation">,</span> <span class="token string">'http://'</span><span class="token punctuation">)</span>        _url <span class="token operator">=</span> tmp_url    <span class="token keyword">else</span><span class="token punctuation">:</span>        _url <span class="token operator">=</span> <span class="token string">'http://'</span> <span class="token operator">+</span> url</code></pre><p>大佬们如果有更好的方法希望能教一下我</p><h2 id="然后需要对url扫描的类型进行判断"><a href="#然后需要对url扫描的类型进行判断" class="headerlink" title="然后需要对url扫描的类型进行判断"></a>然后需要对url扫描的类型进行判断</h2><p>一般分为所有扫描，php文件类型扫描，asp文件类型扫描等</p><pre class=" language-python"><code class="language-python"><span class="token keyword">if</span> dirtype <span class="token operator">==</span> <span class="token string">'dir'</span><span class="token punctuation">:</span>        dir_txt <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"./dir_dict/DIR.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        all_url <span class="token operator">=</span> dir_txt    <span class="token keyword">elif</span> dirtype <span class="token operator">==</span> <span class="token string">'php'</span><span class="token punctuation">:</span>        php_txt <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"./dir_dict/PHP.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        all_url <span class="token operator">=</span> php_txt    <span class="token keyword">elif</span> dirtype <span class="token operator">==</span> <span class="token string">'asp'</span><span class="token punctuation">:</span>        asp_txt <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"./dir_dict/ASP.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        asp_two_txt <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"./dir_dict/ASP_TWO.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        all_url <span class="token operator">=</span> asp_txt <span class="token operator">+</span> asp_two_txt    <span class="token keyword">elif</span> dirtype <span class="token operator">==</span> <span class="token string">'jsp'</span><span class="token punctuation">:</span>        jsp_txt <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"./dir_dict/JSP.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        all_url <span class="token operator">=</span> jsp_txt    <span class="token keyword">elif</span> dirtype <span class="token operator">==</span> <span class="token string">'mdb'</span><span class="token punctuation">:</span>        mdb_txt <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"./dir_dict/MDB.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        all_url <span class="token operator">=</span> mdb_txt    <span class="token keyword">else</span><span class="token punctuation">:</span>        php_txt <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"./dir_dict/PHP.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        asp_txt <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"./dir_dict/ASP.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        jsp_txt <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"./dir_dict/JSP.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        mdb_txt <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"./dir_dict/MDB.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        dir_txt <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"./dir_dict/DIR.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        asp_two_txt <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"./dir_dict/ASP_TWO.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        all_url <span class="token operator">=</span> php_txt <span class="token operator">+</span> asp_txt <span class="token operator">+</span> jsp_txt <span class="token operator">+</span> mdb_txt <span class="token operator">+</span> asp_two_txt <span class="token operator">+</span> dir_txt</code></pre><p>最后将这些目录类型加入到一个数组中</p><h2 id="循环将这些文件类型值加入到url后并组成一个新的数组"><a href="#循环将这些文件类型值加入到url后并组成一个新的数组" class="headerlink" title="循环将这些文件类型值加入到url后并组成一个新的数组"></a>循环将这些文件类型值加入到url后并组成一个新的数组</h2><p>将数组进行多线程进行扫描，根据返回值进行判断目录是否存在</p><p>扫描过程通过多线程加tqdm进行扫描过程的展示</p><p>代码如下：</p><pre class=" language-python"><code class="language-python">print_info<span class="token punctuation">(</span><span class="token string">'启用'</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>thread_count<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'个线程'</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span>    <span class="token keyword">with</span> Pool<span class="token punctuation">(</span>thread_count<span class="token punctuation">)</span> <span class="token keyword">as</span> p<span class="token punctuation">:</span>        pool_result <span class="token operator">=</span> list<span class="token punctuation">(</span>tqdm<span class="token punctuation">(</span>p<span class="token punctuation">.</span>imap<span class="token punctuation">(</span>dir_alive_url<span class="token punctuation">,</span> scan_url_list<span class="token punctuation">)</span><span class="token punctuation">,</span> total<span class="token operator">=</span>len<span class="token punctuation">(</span>scan_url_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> result <span class="token keyword">in</span> pool_result<span class="token punctuation">:</span>        <span class="token keyword">if</span> result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span>green<span class="token punctuation">(</span>str<span class="token punctuation">(</span>result<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'       '</span> <span class="token operator">+</span> color<span class="token punctuation">.</span>green<span class="token punctuation">(</span>str<span class="token punctuation">(</span>result<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">dir_alive_url</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">:</span>    dir <span class="token operator">=</span> option<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    header <span class="token operator">=</span> option<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>dir<span class="token punctuation">,</span> headers<span class="token operator">=</span>header<span class="token punctuation">)</span><span class="token punctuation">.</span>status_code    <span class="token keyword">if</span> r <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> dir<span class="token punctuation">,</span> r<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> dir<span class="token punctuation">,</span> r<span class="token punctuation">)</span></code></pre><p><img src="F:\NoteBook\Cut_image\image-20201017230426341.png" alt="image-20201017230426341"></p><p>这是我扫描局域网的结果</p><p>在扫描过程中我们要注意线程的大小</p><p>线程过大可能会导致有些目录会漏扫</p><p>还有些需要登录的界面我们可以对其设置cookie就等于登录后进行目录扫描</p><p>代码如下</p><pre class=" language-python"><code class="language-python"><span class="token keyword">for</span> line <span class="token keyword">in</span> all_url<span class="token punctuation">:</span>        <span class="token keyword">if</span> line<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            scan_url <span class="token operator">=</span> _url <span class="token operator">+</span> line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            scan_url <span class="token operator">=</span> _url <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> cookie <span class="token operator">==</span> None<span class="token punctuation">:</span>            headers <span class="token operator">=</span> get_user_agent<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            headers <span class="token operator">=</span> get_user_agent<span class="token punctuation">(</span><span class="token punctuation">)</span>            headers<span class="token punctuation">[</span><span class="token string">'Cookie'</span><span class="token punctuation">]</span> <span class="token operator">=</span> cookie        scan_url_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>scan_url<span class="token punctuation">,</span> headers<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># print(scan_url_list[:5])</span>    thread_count <span class="token operator">=</span> threads</code></pre><p>这是一种比较简单地目录扫描方式，现在大多数比较流行的目录扫描是简单爆破加爬虫模式进行，但是爆破在CTF比赛中还是非常常用的，实战中不推荐，大多数服务器甚至有可能会被扫宕机</p><p>项目地址：<a href="https://github.com/CMACCKK/brute_dirscan">https://github.com/CMACCKK/brute_dirscan</a></p>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/12/14/hello-world/"/>
      <url>2020/12/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
